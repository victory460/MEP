import { Injectable } from '@angular/core';
import { SimulatedDeviceHelperService } from '../simulated-device-helper.service';
export var SimulatedAwgService = (function () {
    function SimulatedAwgService(_simulatedDeviceService) {
        this.signalTypes = ['', '', '', '', '', '', '', ''];
        this.signalFreqs = [0, 0, 0, 0, 0, 0, 0, 0];
        this.vpps = [0, 0, 0, 0, 0, 0, 0, 0];
        this.vOffsets = [0, 0, 0, 0, 0, 0, 0, 0];
        this.simulatedDeviceService = _simulatedDeviceService;
    }
    SimulatedAwgService.prototype.setArbitraryWaveform = function (chan) {
        return {
            statusCode: 0,
            wait: 0
        };
    };
    SimulatedAwgService.prototype.setRegularWaveform = function (chan, commandObject) {
        this.signalTypes[chan] = commandObject.signalType;
        this.signalFreqs[chan] = commandObject.signalFreq;
        this.vpps[chan] = commandObject.vpp;
        this.vOffsets[chan] = commandObject.vOffset;
        this.simulatedDeviceService.setAwgSettings(commandObject, chan);
        return {
            "command": "setRegularWaveform",
            "statusCode": 0,
            "actualSignalFreq": commandObject.signalFreq,
            "actualVpp": commandObject.vpp,
            "actualVOffset": commandObject.vOffset,
            "wait": 0
        };
    };
    SimulatedAwgService.prototype.run = function (chan) {
        this.simulatedDeviceService.setTriggerArmed(true);
        return {
            "command": "run",
            "statusCode": 0,
            "wait": 0
        };
    };
    SimulatedAwgService.prototype.stop = function (chan) {
        this.simulatedDeviceService.setTriggerArmed(false);
        return {
            "command": "stop",
            "statusCode": 0,
            "wait": 0
        };
    };
    SimulatedAwgService.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    SimulatedAwgService.ctorParameters = [
        { type: SimulatedDeviceHelperService, },
    ];
    return SimulatedAwgService;
}());
//# sourceMappingURL=simulated-awg.service.js.map