import { Observable } from 'rxjs/Observable';
import 'rxjs/Rx';
import { GenericInstrumentService } from '../generic-instrument.service';
import { DcChannelService } from './dc-channel.service';
import { TransportContainerService } from '../../../transport/transport-container.service';
export declare class DcInstrumentService extends GenericInstrumentService {
    readonly chans: DcChannelService[];
    readonly numChans: number;
    constructor(_transport: TransportContainerService, _dcInstrumentDescriptor: any);
    getVoltagesJson(chans: any): {
        "dc": {};
    };
    getVoltageParse(chan: any, responseObject: any): string;
    setVoltagesJson(chans: any, voltages: any): {
        "dc": {};
    };
    setVoltageParse(chan: any, responseObject: any): string;
    getVoltages(chans: Array<number>): Observable<any>;
    setVoltages(chans: Array<number>, voltages: Array<number>): Observable<any>;
    private streamReadVoltages(chans, delay?);
    private stopStream();
}
