import { Component, Output, Input, EventEmitter } from '@angular/core';
import '../js/jquery1.8.3.min.js';
import '../js/jquery.flot.js';
import '../js/jquery.flot.axislabels.js';
import '../js/jquery.flot.canvas.js';
import '../js/jquery.flot.cursors.js';
import '../js/jquery.flot.resize.js';
import '../js/jquery.flot.symbol.js';
import '../js/jquery.flot.timelinechart.js';
import '../js/jquery.flot.tooltip.js';
import '../js/jquery.flot.zoompan.js';
export var DigilentChart = (function () {
    function DigilentChart() {
        this.chartLoad = new EventEmitter();
        this.initialChartLoad = true;
    }
    DigilentChart.prototype.ngAfterViewInit = function () {
        console.log('View Init');
        var plotArea = $('#' + this.chartId);
        plotArea.css({
            width: '100%',
            height: '100%'
        });
        if (this.digilentChart == undefined) {
            this.createChart();
        }
    };
    DigilentChart.prototype.createChart = function (data) {
        var _this = this;
        console.log('creating digilent chart under id: ' + this.chartId);
        data = data == undefined ? [] : data;
        if (this.chartId == undefined || this.flotOptions == undefined) {
            setTimeout(function () {
                console.log('trying to create chart again');
                _this.createChart();
            }, 200);
            return;
        }
        this.digilentChart = $.plot("#" + this.chartId, data, this.flotOptions);
        this.setNearestPresetSecPerDivVal();
        if (this.initialChartLoad) {
            this.initialChartLoad = false;
            this.chartLoad.emit();
        }
    };
    DigilentChart.prototype.setData = function (dataToDraw, autoscale) {
        if (autoscale) {
            this.createChart(dataToDraw);
            return;
        }
        this.digilentChart.setData(dataToDraw);
        this.digilentChart.setupGrid();
        this.digilentChart.draw();
        this.setNearestPresetSecPerDivVal();
    };
    DigilentChart.prototype.refreshChart = function (dataToDraw) {
        this.createChart(dataToDraw);
        this.setNearestPresetSecPerDivVal();
    };
    DigilentChart.prototype.setNearestPresetSecPerDivVal = function () {
        if (this.flotOptions.zoomPan == undefined) {
            return;
        }
        var getAxes = this.digilentChart.getAxes();
        var newSecPerDivVal = (getAxes.xaxis.max - getAxes.xaxis.min) / 10;
        var secsPerDivArray = this.digilentChart.getSecsPerDivArray();
        var count = 0;
        while (secsPerDivArray[count] < newSecPerDivVal && count < secsPerDivArray.length) {
            count++;
        }
        this.digilentChart.setActiveXIndex(count);
    };
    DigilentChart.decorators = [
        { type: Component, args: [{
                    selector: 'digilent-chart',
                    template: "\n        <div [id]=\"chartId\"></div>\n    "
                },] },
    ];
    /** @nocollapse */
    DigilentChart.ctorParameters = [];
    DigilentChart.propDecorators = {
        'chartLoad': [{ type: Output },],
        'chartId': [{ type: Input },],
        'flotOptions': [{ type: Input },],
        'chartType': [{ type: Input },],
    };
    return DigilentChart;
}());
//# sourceMappingURL=digilent-chart.component.js.map